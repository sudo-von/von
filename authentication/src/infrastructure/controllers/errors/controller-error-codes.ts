export type ControllerError = {
  code: ControllerErrorCode;
  message: string;
  statusCode: number;
};

export type ControllerErrorCode =
| UserControllerErrorCode
| CommonControllerErrorCode
| TokenServiceControllerErrorCode
| CryptographyServiceControllerErrorCode;

export type UserControllerErrorCode =
| 'EMAIL_ALREADY_EXISTS_CONTROLLER_ERROR'
| 'INVALID_CREDENTIALS_CONTROLLER_ERROR'
| 'INVALID_USERNAME_LENGTH_CONTROLLER_ERROR'
| 'INVALID_NAME_LENGTH_CONTROLLER_ERROR'
| 'INVALID_PASSWORD_LENGTH_CONTROLLER_ERROR'
| 'INVALID_PROFILE_PICTURE_LENGTH_CONTROLLER_ERROR'
| 'SINGLE_USER_ONLY_CONTROLLER_ERROR'
| 'USER_CREATION_FAILED_CONTROLLER_ERROR'
| 'USER_NOT_FOUND_CONTROLLER_ERROR'
| 'USER_UPDATE_FAILED_CONTROLLER_ERROR'
| 'USERNAME_ALREADY_EXISTS_CONTROLLER_ERROR';

export type CommonControllerErrorCode =
| 'INTERNAL_SERVER_CONTROLLER_ERROR'
| 'INVALID_CREDENTIALS_CONTROLLER_ERROR'
| 'PERMISSION_DENIED_CONTROLLER_ERROR';

export type TokenServiceControllerErrorCode =
| 'TOKEN_SERVICE_INVALID_TOKEN_CONTROLLER_ERROR'
| 'TOKEN_SERVICE_EXPIRED_TOKEN_CONTROLLER_ERROR';

export type CryptographyServiceControllerErrorCode =
| 'CRYPTOGRAPHY_SERVICE_INVALID_COMPARE_CONTROLLER_ERROR'
| 'CRYPTOGRAPHY_SERVICE_INVALID_HASH_DATA_CONTROLLER_ERROR';
