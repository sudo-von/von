openapi: 3.0.0
info:
  title: Authentication microservice
  description: |-
    Provides endpoints for user authentication and management within the application.
  contact:
    name: Jesús Ángel Rodríguez Martínez.
    email: sudo.von.contact@gmail.com
  version: 1.0.0

externalDocs:
  description: Discover more in the repository.
  url: https://github.com/sudo-von/von/tree/master/authentication

tags:
  - name: authentication
    description: Everything about authentication.
  - name: avatar
    description: Everything about avatars.
  - name: social-network
    description: Everything about social networks.
  - name: user-details
    description: Everything about user details.
  - name: user
    description: Everything about a specific user.

paths:
  /api/v1/authentication/login:
    post:
      tags:
        - authentication
      summary: Authenticates a user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCredentialsRequest'
        required: true
      responses:
        '200':
          description: Ok.
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {token}
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/authentication/signup:
    post:
      tags:
        - authentication
      summary: Creates a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/user/username/{username}:
    get:
      tags:
        - user
      summary: Retrieves user by username.
      parameters:
        - name: username
          in: path
          description: 'The username that needs to be retrieved.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      security:
        - Authorization: []
      summary: Updates a user.
      parameters:
        - name: username
          in: path
          description: 'The username of the user you want to update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/user-details/username/{username}:
    put:
      tags:
        - user-details
      security:
        - Authorization: []
      summary: Replaces a user detail.
      parameters:
        - name: username
          in: path
          description: 'The username of the user you want to update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDetailsRequest'
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/avatar/username/{username}:
    put:
      tags:
        - avatar
      security:
        - Authorization: []
      summary: Replaces an avatar.
      parameters:
        - name: username
          in: path
          description: 'The username of the user you want to update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReplaceAvatarRequest'
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/social-network/username/{username}:
    post:
      tags:
        - social-network
      security:
        - Authorization: []
      summary: Creates a social network.
      parameters:
        - name: username
          in: path
          description: 'The username of the user you want to update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSocialNetworkRequest'
        required: true
      responses:
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/social-network/{id}:
    patch:
      tags:
        - social-network
      security:
        - Authorization: []
      summary: Updates a social network.
      parameters:
        - name: id
          in: path
          description: 'The id of the social network you want to update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateSocialNetworkRequest'
        required: true
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureUserResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CreateUserCredentialsRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
    SecureUserResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        username:
          type: string
        avatar:
          type: string
        details:
          type: object
          properties:
            quote:
              type: string
            interest:
              type: string
            position:
              type: string
        social_networks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              src:
                type: string
              url:
                type: string
              name:
                type: string
    UpdateUserDetailsRequest:
      type: object
      properties:
        quote:
          type: string
        interest:
          type: string
        position:
          type: string
    ReplaceAvatarRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
    CreateSocialNetworkRequest:
      type: object
      properties:
        url:
          type: string
        name:
          type: string
        file:
          type: string
          format: binary
    UpdateSocialNetworkRequest:
      type: object
      properties:
        url:
          type: string
        name:
          type: string
        file:
          type: string
          format: binary
    Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: string

  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: JSON Web Token (JWT).